name: Run checks

on:
  push:
    branches:
      - main
  # Run in PRs with conflicts (https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request)
  pull_request_target:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  RUSTC_WRAPPER: sccache
  SCCACHE_S3_USE_SSL: false
  GIT_LFS_SKIP_SMUDGE: 1
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: full
  SCCACHE_BUCKET: github-runners-remote-cache-shared
  AWS_REGION: us-east-2

jobs:
  clippy-fmt:
    runs-on: [self-hosted, 4vcpu-8ram-ubuntu22-namada-x86]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request_target' }}
      - name: Checkout PR
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request_target' }}
        # See comment in build-and-test.yml
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Configure AWS 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: ${{ secrets.AWS_ROLE }}
      - name: ToBeDeleted
        run: echo "$HOME/.cargo/bin:$PATH" >> $GITHUB_PATH
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
      - name: Start sccache server
        run: sccache --start-server
      - name: Clippy check
        run: make clippy
        env:
          RUSTFLAGS: "-Z threads=8"
      - name: Format check
        run: make fmt
        env:
          RUSTFLAGS: "-Z threads=8"
      - name: Print sccache stats
        if: always()
        run: sccache --show-stats || true
      - name: Stop sccache server
        if: always()
        run: sccache --stop-server || true
      - name: Clean cargo cache
        run: cargo-cache
